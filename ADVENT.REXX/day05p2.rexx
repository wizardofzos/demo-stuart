/* REXX */                                                              00010000
theInput = 5                                                            00091802
p = ''                                                                  00092100
p = p || '3, 225, 1, 225, 6, 6, 1100, '                                 00092200
p = p || '1, 238, 225, 104, 0, 1101, 81, '                              00092300
p = p || '30, 225, 1102, 9, 63, 225, 1001, '                            00092400
p = p || '92, 45, 224, 101, -83, 224, 224, '                            00092500
p = p || '4, 224, 102, 8, 223, 223, 101, '                              00092600
p = p || '2, 224, 224, 1, 224, 223, 223, '                              00092700
p = p || '1102, 41, 38, 225, 1002, 165, 73, '                           00092800
p = p || '224, 101, -2920, 224, 224, 4, 224, '                          00092900
p = p || '102, 8, 223, 223, 101, 4, 224, '                              00093000
p = p || '224, 1, 223, 224, 223, 1101, 18, '                            00093100
p = p || '14, 224, 1001, 224, -32, 224, 4, '                            00094000
p = p || '224, 1002, 223, 8, 223, 101, 3, '                             00095000
p = p || '224, 224, 1, 224, 223, 223, 1101, '                           00096000
p = p || '67, 38, 225, 1102, 54, 62, 224, '                             00097000
p = p || '1001, 224, -3348, 224, 4, 224, 1002, '                        00098000
p = p || '223, 8, 223, 1001, 224, 1, 224, '                             00099000
p = p || '1, 224, 223, 223, 1, 161, 169, '                              00100000
p = p || '224, 101, -62, 224, 224, 4, 224, '                            00101000
p = p || '1002, 223, 8, 223, 101, 1, 224, '                             00102000
p = p || '224, 1, 223, 224, 223, 2, 14, '                               00103000
p = p || '18, 224, 1001, 224, -1890, 224, 4, '                          00104000
p = p || '224, 1002, 223, 8, 223, 101, 3, '                             00105000
p = p || '224, 224, 1, 223, 224, 223, 1101, '                           00105100
p = p || '20, 25, 225, 1102, 40, 11, 225, '                             00105200
p = p || '1102, 42, 58, 225, 101, 76, 217, '                            00105300
p = p || '224, 101, -153, 224, 224, 4, 224, '                           00105400
p = p || '102, 8, 223, 223, 1001, 224, 5, '                             00105500
p = p || '224, 1, 224, 223, 223, 102, 11, '                             00105600
p = p || '43, 224, 1001, 224, -451, 224, 4, '                           00105700
p = p || '224, 1002, 223, 8, 223, 101, 6, '                             00105800
p = p || '224, 224, 1, 223, 224, 223, 1102, '                           00105900
p = p || '77, 23, 225, 4, 223, 99, 0, '                                 00106000
p = p || '0, 0, 677, 0, 0, 0, 0, '                                      00106100
p = p || '0, 0, 0, 0, 0, 0, 0, '                                        00106200
p = p || '1105, 0, 99999, 1105, 227, 247, 1105, '                       00106300
p = p || '1, 99999, 1005, 227, 99999, 1005, 0, '                        00106400
p = p || '256, 1105, 1, 99999, 1106, 227, 99999, '                      00106500
p = p || '1106, 0, 265, 1105, 1, 99999, 1006, '                         00106600
p = p || '0, 99999, 1006, 227, 274, 1105, 1, '                          00106700
p = p || '99999, 1105, 1, 280, 1105, 1, 99999, '                        00106800
p = p || '1, 225, 225, 225, 1101, 294, 0, '                             00106900
p = p || '0, 105, 1, 0, 1105, 1, 99999, '                               00107000
p = p || '1106, 0, 300, 1105, 1, 99999, 1, '                            00107100
p = p || '225, 225, 225, 1101, 314, 0, 0, '                             00107200
p = p || '106, 0, 0, 1105, 1, 99999, 8, '                               00107300
p = p || '226, 677, 224, 1002, 223, 2, 223, '                           00107400
p = p || '1006, 224, 329, 1001, 223, 1, 223, '                          00107500
p = p || '7, 226, 226, 224, 102, 2, 223, '                              00107600
p = p || '223, 1006, 224, 344, 101, 1, 223, '                           00107700
p = p || '223, 108, 677, 677, 224, 1002, 223, '                         00107800
p = p || '2, 223, 1006, 224, 359, 101, 1, '                             00107900
p = p || '223, 223, 1107, 226, 677, 224, 1002, '                        00108000
p = p || '223, 2, 223, 1005, 224, 374, 101, '                           00108100
p = p || '1, 223, 223, 1008, 677, 226, 224, '                           00108200
p = p || '1002, 223, 2, 223, 1005, 224, 389, '                          00108300
p = p || '101, 1, 223, 223, 1007, 677, 226, '                           00108400
p = p || '224, 1002, 223, 2, 223, 1005, 224, '                          00108500
p = p || '404, 1001, 223, 1, 223, 1107, 677, '                          00108600
p = p || '226, 224, 1002, 223, 2, 223, 1005, '                          00108700
p = p || '224, 419, 1001, 223, 1, 223, 108, '                           00108800
p = p || '677, 226, 224, 102, 2, 223, 223, '                            00108900
p = p || '1006, 224, 434, 1001, 223, 1, 223, '                          00109000
p = p || '7, 226, 677, 224, 102, 2, 223, '                              00109100
p = p || '223, 1005, 224, 449, 1001, 223, 1, '                          00109200
p = p || '223, 107, 226, 226, 224, 102, 2, '                            00109300
p = p || '223, 223, 1006, 224, 464, 101, 1, '                           00109400
p = p || '223, 223, 107, 677, 226, 224, 102, '                          00109500
p = p || '2, 223, 223, 1006, 224, 479, 101, '                           00109600
p = p || '1, 223, 223, 1007, 677, 677, 224, '                           00109700
p = p || '1002, 223, 2, 223, 1006, 224, 494, '                          00109800
p = p || '1001, 223, 1, 223, 1008, 226, 226, '                          00109900
p = p || '224, 1002, 223, 2, 223, 1006, 224, '                          00110000
p = p || '509, 101, 1, 223, 223, 7, 677, '                              00110100
p = p || '226, 224, 1002, 223, 2, 223, 1006, '                          00110200
p = p || '224, 524, 1001, 223, 1, 223, 1007, '                          00110300
p = p || '226, 226, 224, 102, 2, 223, 223, '                            00110400
p = p || '1006, 224, 539, 101, 1, 223, 223, '                           00110500
p = p || '8, 677, 226, 224, 1002, 223, 2, '                             00110600
p = p || '223, 1006, 224, 554, 101, 1, 223, '                           00110700
p = p || '223, 1008, 677, 677, 224, 102, 2, '                           00110800
p = p || '223, 223, 1006, 224, 569, 101, 1, '                           00110900
p = p || '223, 223, 1108, 677, 226, 224, 102, '                         00111000
p = p || '2, 223, 223, 1005, 224, 584, 101, '                           00111100
p = p || '1, 223, 223, 107, 677, 677, 224, '                            00111200
p = p || '102, 2, 223, 223, 1006, 224, 599, '                           00111300
p = p || '1001, 223, 1, 223, 1108, 677, 677, '                          00111400
p = p || '224, 1002, 223, 2, 223, 1006, 224, '                          00111500
p = p || '614, 1001, 223, 1, 223, 1107, 677, '                          00111600
p = p || '677, 224, 1002, 223, 2, 223, 1005, '                          00111700
p = p || '224, 629, 1001, 223, 1, 223, 108, '                           00111800
p = p || '226, 226, 224, 1002, 223, 2, 223, '                           00111900
p = p || '1005, 224, 644, 101, 1, 223, 223, '                           00112000
p = p || '8, 226, 226, 224, 1002, 223, 2, '                             00112100
p = p || '223, 1005, 224, 659, 101, 1, 223, '                           00112200
p = p || '223, 1108, 226, 677, 224, 1002, 223, '                        00112300
p = p || '2, 223, 1006, 224, 674, 101, 1, '                             00112400
p = p || '223, 223, 4, 223, 99, 226'                                    00112500
                                                                        00112600
r = run2(p)                                                             00112700
say r                                                                   00112800
exit                                                                    00112900
                                                                        00113000
run2:                                                                   00113100
  parse arg prog                                                        00113200
  prog = translate(prog, ' ', ',')             /* get rid of commas  */ 00113300
  instructions = words(prog)                   /* count them all     */ 00113400
  p. = ''                                      /* stick em in a stem */ 00113500
  do i = 0 to instructions                                              00113600
    p.i= word(prog, i+1)                                                00113700
  end                                                                   00113800
  say    "Total Instructions "instructions                              00113900
  next = 0                                     /* point to next inst */ 00114000
  cont = 1                                     /* no halt psw :)     */ 00114100
  do while cont = 1                                                     00114200
    inst = right(p.next,'5',0)                 /* get the full inst  */ 00114300
    opcode = substr(inst,4,2)                  /* get the opcode     */ 00114400
    mod1   = substr(inst,3,1)                  /* mode 1st parm      */ 00114500
    mod2   = substr(inst,2,1)                  /* mode 2nd parm      */ 00114600
    mod3   = substr(inst,1,1)                  /* mode 3rd parm      */ 00114700
    select                                                              00114800
      when opcode = '01' then do               /* Addition           */ 00114900
        p1 =   next + 1                                                 00115000
        p2 =   next + 2                                                 00116000
        p3 =   next + 3                                                 00116100
        parm1 = p.p1                                                    00116200
        parm2 = p.p2                                                    00116300
        parm3 = p.p3                                                    00116400
        next = next + 4                                                 00116500
        if mod1 = 0 then parm1 = p.parm1                                00116600
        if mod2 = 0 then parm2 = p.parm2                                00116700
                                                                        00116800
                                                                        00116900
        p.parm3 = parm1 + parm2                                         00117000
        iterate                                                         00118000
      end                                                               00119000
      when opcode = '02' then do               /* Multiplication     */ 00119100
        p1 =   next + 1                                                 00119200
        p2 =   next + 2                                                 00119300
        p3 =   next + 3                                                 00119400
        parm1 = p.p1                                                    00119500
        parm2 = p.p2                                                    00119600
        parm3 = p.p3                                                    00119700
        next = next + 4                                                 00119800
        if mod1 = 0 then parm1 = p.parm1                                00119900
        if mod2 = 0 then parm2 = p.parm2                                00120000
                                                                        00121000
        p.parm3 = parm1 * parm2                                         00121100
        iterate                                                         00121200
      end                                                               00121300
      when opcode = '03' then do               /* Store              */ 00121400
        p1 =   next + 1                                                 00121500
        parm1 = p.p1                                                    00121600
        next = next + 2                                                 00121700
                                                                        00121800
        p.parm1 = theInput                                              00122000
        iterate                                                         00123000
      end                                                               00124000
      when opcode = '04' then do               /* Output             */ 00125000
        p1 = next + 1                                                   00125100
        parm1 = p.p1                                                    00125200
        if mod1 = 0 then parm1 = p.parm1                                00125400
        say "Output: " parm1                                            00125600
        next = next + 2                                                 00125700
        iterate                                                         00125800
      end                                                               00125900
      when opcode = '05' then do               /* Jump if true       */ 00126000
        p1 = next + 1                                                   00126300
        p2 = next + 2                                                   00126400
        parm1 = p.p1                                                    00126504
        parm2 = p.p2                                                    00126604
        if mod1 = 0 then parm1 = p.parm1                                00126700
        if mod2 = 0 then parm2 = p.parm2                                00126800
        if parm1 /= 0 then next = parm2                                 00126900
                      else next = next + 3                              00127000
      end                                                               00127200
      when opcode = '06' then do               /* Jump if false      */ 00127300
        p1 = next + 1                                                   00127500
        p2 = next + 2                                                   00127600
        parm1 = p.p1                                                    00127708
        parm2 = p.p2                                                    00127808
        if mod1 = 0 then parm1 = p.parm1                                00127900
        if mod2 = 0 then parm2 = p.parm2                                00128000
        if parm1 = 0 then next = parm2                                  00128100
                     else next = next + 3                               00128200
      end                                                               00128300
      when opcode = '07' then do               /* Less than          */ 00128400
        p1 = next + 1                                                   00128600
        p2 = next + 2                                                   00128700
        p3 = next + 3                                                   00128800
        parm1 = p.p1                                                    00128908
        parm2 = p.p2                                                    00129008
        parm3 = p.p3                                                    00129108
        if mod1 = 0 then parm1 = p.parm1                                00129200
        if mod2 = 0 then parm2 = p.parm2                                00129300
        if parm1 < parm2 then p.parm3 = 1                               00129500
                         else p.parm3 = 0                               00129600
        next = next + 4                                                 00129700
      end                                                               00129800
      when opcode = '08' then do               /* Equals             */ 00129900
        p1 = next + 1                                                   00130200
        p2 = next + 2                                                   00130300
        p3 = next + 3                                                   00130400
        parm1 = p.p1                                                    00130508
        parm2 = p.p2                                                    00130608
        parm3 = p.p3                                                    00130708
        if mod1 = 0 then parm1 = p.parm1                                00130800
        if mod2 = 0 then parm2 = p.parm2                                00130900
        if parm1 = parm2 then p.parm3 = 1                               00131300
                         else p.parm3 = 0                               00131400
        next = next + 4                                                 00131500
      end                                                               00131600
      when opcode = '99' then do               /* Terminate          */ 00131700
        say "Program terminated"                                        00131800
        cont = 0                                                        00131900
      end                                                               00132000
      otherwise do                                                      00132100
        say "unexpected opcode"                                         00132200
      end                                                               00132300
    end                                                                 00132400
    if next > instructions then cont = 0                                00132500
  end                                                                   00132600
  res = p.0                                                             00132700
  do jj = 1 to instructions                                             00132800
    res = res || ',' || p.jj                                            00132900
  end                                                                   00133000
  return res                                                            00133100
                                                                        00133200
